name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 13 */3 * *' # 3日に1回、JST 22:00 (UTC 13:00)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        pip install google-generativeai requests

    - name: Generate new hypotheses
      run: |
        python3 -c "
        import google.generativeai as genai
        import json
        import os
        from datetime import datetime

        # Gemini APIキーを設定
        genai.configure(api_key='${{ secrets.GEMINI_API_KEY }}')
        model = genai.GenerativeModel('gemini-2.5-flash')

        # 新しい仮説を生成
        prompt = '''
        経済学に関する新しい研究仮説を8つ生成してください。
        各仮説は以下のJSON形式で出力してください：

        {
          \"total_hypotheses\": 8,
          \"generated_at\": \"現在のISO形式の日時\",
          \"hypotheses\": [
            {
              \"id\": 1,
              \"title\": \"仮説のタイトル\",
              \"description\": \"詳細な説明（200-300文字）\",
              \"category\": \"カテゴリ（金融政策、マクロ経済学、国際経済学、労働経済学、環境経済学、デジタル経済学、金融市場、エネルギー経済学のいずれか）\",
              \"confidence\": 70-95の整数,
              \"research_methods\": [\"研究手法1\", \"研究手法2\", \"研究手法3\", \"研究手法4\"],
              \"key_factors\": [\"重要要因1\", \"重要要因2\", \"重要要因3\", \"重要要因4\"],
              \"data_sources_used\": [\"FRED\", \"World Bank\", \"Yahoo Finance\", \"CoinGecko\"],
              \"policy_implications\": [\"政策含意1\", \"政策含意2\"],
              \"novelty_score\": 70-95の整数,
              \"feasibility_score\": 65-95の整数,
              \"expected_impact\": \"期待される影響の説明\",
              \"generated_at\": \"現在のISO形式の日時\"
            }
          ]
        }

        最新の経済動向、技術革新、社会変化を反映した革新的で実現可能な仮説を生成してください。
        '''

        try:
            response = model.generate_content(prompt)
            generated_text = response.text
            
            # JSON形式を抽出
            if '```json' in generated_text:
                start = generated_text.find('```json') + 7
                end = generated_text.find('```', start)
                generated_text = generated_text[start:end].strip()
            
            # JSONをパース
            hypotheses_data = json.loads(generated_text)
            
            # 生成日時を更新
            current_time = datetime.utcnow().isoformat() + 'Z'
            hypotheses_data['generated_at'] = current_time
            
            for i, hyp in enumerate(hypotheses_data['hypotheses']):
                hyp['id'] = i + 1
                hyp['generated_at'] = current_time
            
            # ファイルに保存
            with open('public/data/hypotheses.json', 'w', encoding='utf-8') as f:
                json.dump(hypotheses_data, f, ensure_ascii=False, indent=2)
            
            print('新しい仮説を生成しました')
            
        except Exception as e:
            print(f'仮説生成エラー: {e}')
            # エラーの場合は既存ファイルをそのまま使用
        "
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Commit updated hypotheses
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add public/data/hypotheses.json
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "自動更新: 新しい研究仮説を生成 $(date '+%Y-%m-%d %H:%M:%S')"
          git push
        fi

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        run_install: false

    - name: Install dependencies
      run: pnpm install

    - name: Build React application
      run: pnpm run build
      env:
        VITE_GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-deploy
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


